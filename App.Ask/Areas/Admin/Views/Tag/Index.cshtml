
@{
    ViewData["Title"] = "标签管理";
}

<div class="bg-white d-flex align-items-center justify-content-between">
    <h5 class="mb-0 ml-2">标签管理</h5>
    <ol class="breadcrumb mb-0 bg-white align-self-end">
        <li class="breadcrumb-item">
            <a asp-area="Admin" asp-controller="Home" asp-action="Index">首页</a>
        </li>
    </ol>
</div>

<div class="container-fluid" id="vue-app">
    <div class="row">
        <div class="col">
            <div class="card mt-2">
                <div class="card-body">
                    <form autocomplete="off" class="form-inline" id="form-search" v-on:submit.prevent="onSearch">
                        <div class="input-group mr-3">
                            <input type="text" name="search" id="search" class="form-control" value="" placeholder="搜索的标签名称" />
                            <div class="input-group-append">
                                <button class="btn btn-outline-info" type="button" title="搜索" id="btn-search" v-bind:disabled ="isSearch == true">
                                    <span v-if="isSearch" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <i v-else class="fa fa-search" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="button" id="btn-add">增加标签</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="table-responsive mt-2">
                <table class="table table-hover table-bordered bg-white table-nowrap">
                    <thead>
                        <tr class="table-warning">
                            <th scope="col">Id</th>
                            <th scope="col">标签名称</th>
                            <th scope="col">是否推荐</th>
                            <th scope="col">是否系统创建</th>
                            <th scope="col">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-if="isLoaded == false">
                            <td colspan="5">
                                <div class="p-2 text-md-center">正在加载数据...</div>
                            </td>
                        </tr>
                        <tr v-if="isLoaded == true && items.length == 0">
                            <td colspan="5">
                                <div class="p-2 text-md-center">暂无数据</div>
                            </td>
                        </tr>
                        <tr v-for="item in items">
                            <td v-text="item.Id" v-bind:class="getRowClass(item)"></td>
                            <td v-text="item.Name"></td>
                            <td>
                                <input type="checkbox" v-model="item.IsBest" v-on:click.prevent="changeBestStatus(item)" />
                            </td>
                            <td>
                                <span v-if="item.IsSystem">是</span>
                                <span v-else>否</span>
                            </td>
                            <td>
                                <button class="btn btn-danger btn-sm mr-2" v-on:click="removeItem(item)">删 除</button>
                                <button class="btn btn-warning btn-sm mr-2" v-on:click="modifyItem(item)">修 改</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="placeholder"></div>
@section js{
    <script>
        $(function () {
            let data = {
                isLoaded: false,
                items: [],
                isSearch: false
            };           
            let vm = new Vue({
                el: "#vue-app",
                data: data,
                methods: {
                    onSearch: function () {
                        data.isSearch = true;
                        let formDom = document.getElementById("form-search");
                        AjaxHelper.postForm('@Url.Action("Search")', formDom).done(function (result) {
                            if (result.Success) {
                                data.isLoaded = true;
                                data.items = result.Context;
                            } else {
                                DialogHelper.showErrorDialog(result.Message);
                            }
                        }).always(function () {
                            $("#search").focus();
                            data.isSearch = false;
                            $("#search").select();
                        })
                    },
                    removeItem: function (item) {
                        DialogHelper.showConfirmDialog(`确认删除'${item.Name}'吗？`, function () {
                            let url = '@Url.Action("Delete")';
                            AjaxHelper.postJson(url, item).done(function (postResult) {
                                if (postResult.Success) {
                                    data.items.splice(data.items.indexOf(item), 1);
                                    DialogHelper.showToastSuccess("删除成功");
                                } else {
                                    DialogHelper.showErrorDialog(postResult.Message);
                                }
                            })
                        })
                    },
                    changeBestStatus: function (item) {
                        AjaxHelper.postJson("@Url.Action("ChangeStatus")", item).done(function (result) {
                            if (result.Success) {
                                let newTag = result.Context;
                                item.IsBest = newTag.IsBest;
                                DialogHelper.showToastSuccess("操作成功");
                            } else {
                                DialogHelper.showErrorDialog(result.Message);
                            }
                        })
                    },
                    modifyItem: function (item) {
                         let id = item.Id;
                        $.get("@Url.Action("Edit")/" + id).done(function (html) {
                            placeholder.html(html);
                            $("#modify_modal").modal("show");
                            $('#modify_modal').on('shown.bs.modal', function () {
                                $('#Name').focus();
                                $("#Name").select();
                            });
                            let formDom = document.getElementById("form");
                            $.validator.unobtrusive.parse(formDom);
                            // 处理表单提交
                            $(formDom).data("validator").settings.submitHandler = function () {
                                AjaxHelper.postForm('@Url.Action("Edit")', formDom).done(function (result) {
                                    if (result.Success) {
                                        item.Name = result.Context.Name;
                                        item.IsBest = result.Context.IsBest;
                                        item.IsSystem = result.Context.IsSystem;
                                        $("#modify_modal").modal("hide");
                                        DialogHelper.showToastSuccess("操作成功");
                                    } else {
                                        AjaxHelper.showFormError(formDom, result);
                                    }
                                    return false;
                                });
                                return false;
                            };
                        })
                    },
                    getRowClass: function (item) {
                        return "";
                    }
                }
            });
            // 加载数据
            $.post("@Url.Action("GetAll")").done(function (result) {
                if (result.Success) {
                    data.isLoaded = true;
                    data.items = result.Context;
                } else {
                    DialogHelper.showErrorDialog(result.Message);
                }
            }).always(function () {
                $("#search").focus();
            });
         // 弹出新增对话框
            let placeholder = $("#placeholder");
            $("#btn-add").click(function () {
                $.get("@Url.Action("Create")").done(function (html) {
                    try {
                        placeholder.html(html);
                        $("#add_tag").modal("show");
                        $('#add_tag').on('shown.bs.modal', function () {
                            $('#Name').focus();
                        })
                        let formDom = document.getElementById("form");
                        $.validator.unobtrusive.parse(formDom);
                        // 处理表单提交
                        $(formDom).data("validator").settings.submitHandler = function () {
                            AjaxHelper.postForm('@Url.Action("Create")', formDom).done(function (result) {
                                if (result.Success) {
                                    data.items.unshift(result.Context);
                                    $("#add_tag").modal("hide");
                                    DialogHelper.showToastSuccess("操作成功");
                                } else {
                                    AjaxHelper.showFormError(formDom, result);
                                }
                                return false;
                            });
                            return false;
                        };
                    } catch (e) {
                        console.error(e);
                    }
                })
            });
        });
    </script>
}